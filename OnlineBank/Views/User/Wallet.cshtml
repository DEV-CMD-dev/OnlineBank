@using OnlineBank.Data.Entities
@using OnlineBank.Src.Classes
@using OnlineBank.Src.Enums
@model WalletViewModel

<link rel="stylesheet" href="~/css/wallet.css" />

@{
    ViewData["Title"] = "Wallet";
}

<main class="main-wallet">
    <div class="wallet-container">
        <div class="wallet-header">
            <h2>Wallet</h2>
            <p>Balance overview for <strong>@Model.User.FullName</strong></p>
        </div>

        @if (Model.Cards != null && Model.Cards.Any())
        {
            <div class="cards-controls">
                <button id="prevCard" type="button">◀</button>
                <button id="nextCard" type="button">▶</button>
            </div>

            <div class="cards-stage" id="cardsStage">
                @foreach (var card in Model.Cards)
                {
                    var cardClass = card.CardType switch
                    {
                        CardType.Visa => "card-item card-visa",
                        CardType.MasterCard => "card-item card-mastercard",
                        CardType.Amex => "card-item card-amex",
                        CardType.Maestro => "card-item card-maestro",
                        CardType.UnionPay => "card-item card-unionpay",
                        _ => "card-item card-other"
                    };

                    <div class="@cardClass @(card.IsBlocked ? "blocked" : "")"
                         data-cvv="@card.CVV"
                         data-index="@Model.Cards.IndexOf(card)">
                        <img class="card-type-label" src="~/images/cards/@($"{card.CardType.ToString().ToLower()}.png")" alt="@card.CardType" />

                        <p data-full="@card.CardNumber" class="card-number sensitive">@($"{card.CardNumber[0..4]} **** **** {card.CardNumber[12..16]}")</p>
                        <p class="balance sensitive"><strong>Balance:</strong> $@card.Balance</p>
                        <p class="expires"><strong>Expires:</strong> @card.ExpirationDate.ToShortDateString()</p>
                        <p class="status">@(card.IsBlocked ? "Blocked" : "Active")</p>

                        <div class="cvv-block">
                            <label>CVV</label>
                            <span class="cvv masked">***</span>
                            <button class="toggleReveal" type="button" aria-pressed="false">
                                <img src="/images/resources/hide.png"/>
                            </button>
                        </div>

                    </div>
                }
            </div>
        }
        else
        {
            <p>No cards available</p>
        }
    </div>
</main>

<script src="~/js/wallet.js"></script>

